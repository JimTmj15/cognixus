services:
  database:
    image: postgres:latest
    ports:
      - $DB_PORT:$DB_PORT
    restart: always
    environment:
      POSTGRES_DB: $DB_NAME
      POSTGRES_PASSWORD: $DB_PASS
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    image: api
    container_name: api
    restart: unless-stopped
    env_file: .env
    ports:
      - $PORT:$PORT
    depends_on:
      - database  
    networks:
      - backend
  migrate:
    image: migrate/migrate
    networks:
      - backend
    volumes:
      - ./db/migrations:/migrations
    entrypoint:
      [
        "migrate",
        "-path",
        "/migrations",
        "-database",
        "postgres://postgres:abcd1234@database:5432/api?sslmode=disable",
      ]
    command: ["up"]
    depends_on:
      database:
        condition: service_healthy
    restart: on-failure
networks:
  backend:
    driver: bridge
  